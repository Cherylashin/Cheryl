.box1{
    >.box3{
        color: red;
        &:hover{
            color: blue;
        }
    }
    // 为box1设置一个hover
    // & 就表示外层的父元素
    &:hover{
        color: orange;
    }
}

.p1{
    width: 100px;
    height: 100px;
}
// :extend() 对当前选择器扩展指定原选择器的样式（选择器分组）
.p2:extend(.p1){
    color: red;
}
.p3{
    // 直接对指定的样式进行引用，这里就相当于将p1的样式在这里进行了复制
    // mixin 混合
    .p1;
}
// 使用类选择器时可以在选择器后边添加一个括号，这时我们实际上就创建了一个mixin
.p4(){
    width: 100px;
    height: 100px;
}

.p5{
    .p4;
}

// 混合函数 在混合函数中可以直接设置变量
.test(@w,@h,@bg-color){
    width: @w;
    height: @h;
    border: 1px solid @bg-color;
}
div{
    // 调用混合函数，按顺序传递参数
    // .test(200px, 300px, #bfa);
    // 不按顺序，可以加上参数名
    .test(@h:300px, @w:200px, @bg-color:#bfa);
}

span{
    color: average(red,blue);
    // 背景颜色加深20%
    background-color: darken(#bfa,20%);
}
